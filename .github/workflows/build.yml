name: CI

on:
  push:
    branches: [main]  # Runs on all pushes to 'main'
    tags:
      - "*"           # Runs on all tags (no "v" required)
  pull_request:
    branches: [main]  # Runs on PRs targeting 'main'
  workflow_dispatch:   # Allows manual execution

jobs:
  build-and-test:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # https://github.com/actions/checkout/issues/1467
          fetch-depth: 0
          fetch-tags: true

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Ensure Cargo.toml version matches Git describe
        run: |
          CARGO_VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
          GIT_VERSION=$(git describe --tags --always --dirty)

          echo "Cargo.toml version: $CARGO_VERSION"
          echo "Git describe version: $GIT_VERSION"

          if ! echo "$GIT_VERSION" | grep -q "^$CARGO_VERSION"; then
            echo "Version mismatch! Cargo.toml ($CARGO_VERSION) does not match Git describe ($GIT_VERSION)"
          exit 1

      - name: Ensure working tree is clean before build
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Uncommitted changes or untracked files detected!"
            git status
            exit 1
          fi

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check Rust Formatting
        run: cargo fmt --all -- --check

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Cargo Build
        run: cargo build --release

      - name: Git Describe
        run: git describe --tags --always --dirty

      - name: Cargo Run
        run: |
          output=$(cargo run --release --quiet)
          echo "Cargo output: $output"
          if echo "$output" | grep -q -- '-dirty'; then
            echo "CI build should not be dirty!"
            exit 1
          fi

      - name: Ensure working tree is clean after build
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "The build modified files (e.g., Cargo.lock)!"
            git status
            exit 1
          fi

      - name: Run Self-Tests
        run: make test
